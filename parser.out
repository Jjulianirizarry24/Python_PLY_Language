Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> expression
Rule 1     expression -> term
Rule 2     expression -> expression PLUS term
Rule 3     expression -> expression MINUS term
Rule 4     term -> factor
Rule 5     term -> term STAR factor
Rule 6     term -> term SLASH factor
Rule 7     term -> term PCT factor
Rule 8     factor -> ID
Rule 9     factor -> NUM
Rule 10    factor -> LPAREN expression RPAREN
Rule 11    factor -> factor LPAREN argsopt RPAREN
Rule 12    type -> STR
Rule 13    type -> INT
Rule 14    type -> LONG
Rule 15    type -> FLOAT
Rule 16    type -> LIST
Rule 17    type -> TUPLE
Rule 18    type -> DICT
Rule 19    attribute -> ID TYPEASSIGN type
Rule 20    attributes -> attribute
Rule 21    attributes -> attributes SEPARATOR attribute
Rule 22    new_att -> ID TYPEASSIGN STR
Rule 23    new_att -> ID TYPEASSIGN NUM
Rule 24    test -> expression NE expression
Rule 25    test -> expression LT expression
Rule 26    test -> expression LE expression
Rule 27    test -> expression GE expression
Rule 28    test -> expression GT expression
Rule 29    block -> BLOCK ID ASSIGN LPAREN attributes RPAREN
Rule 30    block -> ADD ID ASSIGN LPAREN attributes RPAREN
Rule 31    block -> PRINT ID
Rule 32    block -> RUN ID
Rule 33    block -> MINE ID
Rule 34    block -> EXPORT ID
Rule 35    block -> VIEW ID
Rule 36    argsopt -> args
Rule 37    argsopt -> empty
Rule 38    args -> expression SEPARATOR args
Rule 39    args -> expression
Rule 40    empty -> <empty>

Terminals, with rules where they appear

ADD                  : 30
ASSIGN               : 29 30
BLOCK                : 29
DICT                 : 18
EXPORT               : 34
FLOAT                : 15
GE                   : 27
GT                   : 28
ID                   : 8 19 22 23 29 30 31 32 33 34 35
INT                  : 13
LE                   : 26
LIST                 : 16
LONG                 : 14
LPAREN               : 10 11 29 30
LT                   : 25
MINE                 : 33
MINUS                : 3
NE                   : 24
NUM                  : 9 23
PCT                  : 7
PLUS                 : 2
PRINT                : 31
RPAREN               : 10 11 29 30
RUN                  : 32
SEPARATOR            : 21 38
SLASH                : 6
STAR                 : 5
STR                  : 12 22
TUPLE                : 17
TYPEASSIGN           : 19 22 23
VIEW                 : 35
error                : 

Nonterminals, with rules where they appear

args                 : 36 38
argsopt              : 11
attribute            : 20 21
attributes           : 21 29 30
block                : 
empty                : 37
expression           : 2 3 10 24 24 25 25 26 26 27 27 28 28 38 39 0
factor               : 4 5 6 7 11
new_att              : 
term                 : 1 2 3 5 6 7
test                 : 
type                 : 19

Parsing method: LALR

state 0

    (0) S' -> . expression
    (1) expression -> . term
    (2) expression -> . expression PLUS term
    (3) expression -> . expression MINUS term
    (4) term -> . factor
    (5) term -> . term STAR factor
    (6) term -> . term SLASH factor
    (7) term -> . term PCT factor
    (8) factor -> . ID
    (9) factor -> . NUM
    (10) factor -> . LPAREN expression RPAREN
    (11) factor -> . factor LPAREN argsopt RPAREN

    ID              shift and go to state 4
    NUM             shift and go to state 5
    LPAREN          shift and go to state 6

    expression                     shift and go to state 1
    term                           shift and go to state 2
    factor                         shift and go to state 3

state 1

    (0) S' -> expression .
    (2) expression -> expression . PLUS term
    (3) expression -> expression . MINUS term

    PLUS            shift and go to state 7
    MINUS           shift and go to state 8


state 2

    (1) expression -> term .
    (5) term -> term . STAR factor
    (6) term -> term . SLASH factor
    (7) term -> term . PCT factor

    PLUS            reduce using rule 1 (expression -> term .)
    MINUS           reduce using rule 1 (expression -> term .)
    $end            reduce using rule 1 (expression -> term .)
    RPAREN          reduce using rule 1 (expression -> term .)
    SEPARATOR       reduce using rule 1 (expression -> term .)
    STAR            shift and go to state 9
    SLASH           shift and go to state 10
    PCT             shift and go to state 11


state 3

    (4) term -> factor .
    (11) factor -> factor . LPAREN argsopt RPAREN

    STAR            reduce using rule 4 (term -> factor .)
    SLASH           reduce using rule 4 (term -> factor .)
    PCT             reduce using rule 4 (term -> factor .)
    PLUS            reduce using rule 4 (term -> factor .)
    MINUS           reduce using rule 4 (term -> factor .)
    $end            reduce using rule 4 (term -> factor .)
    RPAREN          reduce using rule 4 (term -> factor .)
    SEPARATOR       reduce using rule 4 (term -> factor .)
    LPAREN          shift and go to state 12


state 4

    (8) factor -> ID .

    LPAREN          reduce using rule 8 (factor -> ID .)
    STAR            reduce using rule 8 (factor -> ID .)
    SLASH           reduce using rule 8 (factor -> ID .)
    PCT             reduce using rule 8 (factor -> ID .)
    PLUS            reduce using rule 8 (factor -> ID .)
    MINUS           reduce using rule 8 (factor -> ID .)
    $end            reduce using rule 8 (factor -> ID .)
    RPAREN          reduce using rule 8 (factor -> ID .)
    SEPARATOR       reduce using rule 8 (factor -> ID .)


state 5

    (9) factor -> NUM .

    LPAREN          reduce using rule 9 (factor -> NUM .)
    STAR            reduce using rule 9 (factor -> NUM .)
    SLASH           reduce using rule 9 (factor -> NUM .)
    PCT             reduce using rule 9 (factor -> NUM .)
    PLUS            reduce using rule 9 (factor -> NUM .)
    MINUS           reduce using rule 9 (factor -> NUM .)
    $end            reduce using rule 9 (factor -> NUM .)
    RPAREN          reduce using rule 9 (factor -> NUM .)
    SEPARATOR       reduce using rule 9 (factor -> NUM .)


state 6

    (10) factor -> LPAREN . expression RPAREN
    (1) expression -> . term
    (2) expression -> . expression PLUS term
    (3) expression -> . expression MINUS term
    (4) term -> . factor
    (5) term -> . term STAR factor
    (6) term -> . term SLASH factor
    (7) term -> . term PCT factor
    (8) factor -> . ID
    (9) factor -> . NUM
    (10) factor -> . LPAREN expression RPAREN
    (11) factor -> . factor LPAREN argsopt RPAREN

    ID              shift and go to state 4
    NUM             shift and go to state 5
    LPAREN          shift and go to state 6

    expression                     shift and go to state 13
    term                           shift and go to state 2
    factor                         shift and go to state 3

state 7

    (2) expression -> expression PLUS . term
    (4) term -> . factor
    (5) term -> . term STAR factor
    (6) term -> . term SLASH factor
    (7) term -> . term PCT factor
    (8) factor -> . ID
    (9) factor -> . NUM
    (10) factor -> . LPAREN expression RPAREN
    (11) factor -> . factor LPAREN argsopt RPAREN

    ID              shift and go to state 4
    NUM             shift and go to state 5
    LPAREN          shift and go to state 6

    term                           shift and go to state 14
    factor                         shift and go to state 3

state 8

    (3) expression -> expression MINUS . term
    (4) term -> . factor
    (5) term -> . term STAR factor
    (6) term -> . term SLASH factor
    (7) term -> . term PCT factor
    (8) factor -> . ID
    (9) factor -> . NUM
    (10) factor -> . LPAREN expression RPAREN
    (11) factor -> . factor LPAREN argsopt RPAREN

    ID              shift and go to state 4
    NUM             shift and go to state 5
    LPAREN          shift and go to state 6

    term                           shift and go to state 15
    factor                         shift and go to state 3

state 9

    (5) term -> term STAR . factor
    (8) factor -> . ID
    (9) factor -> . NUM
    (10) factor -> . LPAREN expression RPAREN
    (11) factor -> . factor LPAREN argsopt RPAREN

    ID              shift and go to state 4
    NUM             shift and go to state 5
    LPAREN          shift and go to state 6

    factor                         shift and go to state 16

state 10

    (6) term -> term SLASH . factor
    (8) factor -> . ID
    (9) factor -> . NUM
    (10) factor -> . LPAREN expression RPAREN
    (11) factor -> . factor LPAREN argsopt RPAREN

    ID              shift and go to state 4
    NUM             shift and go to state 5
    LPAREN          shift and go to state 6

    factor                         shift and go to state 17

state 11

    (7) term -> term PCT . factor
    (8) factor -> . ID
    (9) factor -> . NUM
    (10) factor -> . LPAREN expression RPAREN
    (11) factor -> . factor LPAREN argsopt RPAREN

    ID              shift and go to state 4
    NUM             shift and go to state 5
    LPAREN          shift and go to state 6

    factor                         shift and go to state 18

state 12

    (11) factor -> factor LPAREN . argsopt RPAREN
    (36) argsopt -> . args
    (37) argsopt -> . empty
    (38) args -> . expression SEPARATOR args
    (39) args -> . expression
    (40) empty -> .
    (1) expression -> . term
    (2) expression -> . expression PLUS term
    (3) expression -> . expression MINUS term
    (4) term -> . factor
    (5) term -> . term STAR factor
    (6) term -> . term SLASH factor
    (7) term -> . term PCT factor
    (8) factor -> . ID
    (9) factor -> . NUM
    (10) factor -> . LPAREN expression RPAREN
    (11) factor -> . factor LPAREN argsopt RPAREN

    RPAREN          reduce using rule 40 (empty -> .)
    ID              shift and go to state 4
    NUM             shift and go to state 5
    LPAREN          shift and go to state 6

    factor                         shift and go to state 3
    argsopt                        shift and go to state 19
    args                           shift and go to state 20
    empty                          shift and go to state 21
    expression                     shift and go to state 22
    term                           shift and go to state 2

state 13

    (10) factor -> LPAREN expression . RPAREN
    (2) expression -> expression . PLUS term
    (3) expression -> expression . MINUS term

    RPAREN          shift and go to state 23
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8


state 14

    (2) expression -> expression PLUS term .
    (5) term -> term . STAR factor
    (6) term -> term . SLASH factor
    (7) term -> term . PCT factor

    PLUS            reduce using rule 2 (expression -> expression PLUS term .)
    MINUS           reduce using rule 2 (expression -> expression PLUS term .)
    $end            reduce using rule 2 (expression -> expression PLUS term .)
    RPAREN          reduce using rule 2 (expression -> expression PLUS term .)
    SEPARATOR       reduce using rule 2 (expression -> expression PLUS term .)
    STAR            shift and go to state 9
    SLASH           shift and go to state 10
    PCT             shift and go to state 11


state 15

    (3) expression -> expression MINUS term .
    (5) term -> term . STAR factor
    (6) term -> term . SLASH factor
    (7) term -> term . PCT factor

    PLUS            reduce using rule 3 (expression -> expression MINUS term .)
    MINUS           reduce using rule 3 (expression -> expression MINUS term .)
    $end            reduce using rule 3 (expression -> expression MINUS term .)
    RPAREN          reduce using rule 3 (expression -> expression MINUS term .)
    SEPARATOR       reduce using rule 3 (expression -> expression MINUS term .)
    STAR            shift and go to state 9
    SLASH           shift and go to state 10
    PCT             shift and go to state 11


state 16

    (5) term -> term STAR factor .
    (11) factor -> factor . LPAREN argsopt RPAREN

    STAR            reduce using rule 5 (term -> term STAR factor .)
    SLASH           reduce using rule 5 (term -> term STAR factor .)
    PCT             reduce using rule 5 (term -> term STAR factor .)
    PLUS            reduce using rule 5 (term -> term STAR factor .)
    MINUS           reduce using rule 5 (term -> term STAR factor .)
    $end            reduce using rule 5 (term -> term STAR factor .)
    RPAREN          reduce using rule 5 (term -> term STAR factor .)
    SEPARATOR       reduce using rule 5 (term -> term STAR factor .)
    LPAREN          shift and go to state 12


state 17

    (6) term -> term SLASH factor .
    (11) factor -> factor . LPAREN argsopt RPAREN

    STAR            reduce using rule 6 (term -> term SLASH factor .)
    SLASH           reduce using rule 6 (term -> term SLASH factor .)
    PCT             reduce using rule 6 (term -> term SLASH factor .)
    PLUS            reduce using rule 6 (term -> term SLASH factor .)
    MINUS           reduce using rule 6 (term -> term SLASH factor .)
    $end            reduce using rule 6 (term -> term SLASH factor .)
    RPAREN          reduce using rule 6 (term -> term SLASH factor .)
    SEPARATOR       reduce using rule 6 (term -> term SLASH factor .)
    LPAREN          shift and go to state 12


state 18

    (7) term -> term PCT factor .
    (11) factor -> factor . LPAREN argsopt RPAREN

    STAR            reduce using rule 7 (term -> term PCT factor .)
    SLASH           reduce using rule 7 (term -> term PCT factor .)
    PCT             reduce using rule 7 (term -> term PCT factor .)
    PLUS            reduce using rule 7 (term -> term PCT factor .)
    MINUS           reduce using rule 7 (term -> term PCT factor .)
    $end            reduce using rule 7 (term -> term PCT factor .)
    RPAREN          reduce using rule 7 (term -> term PCT factor .)
    SEPARATOR       reduce using rule 7 (term -> term PCT factor .)
    LPAREN          shift and go to state 12


state 19

    (11) factor -> factor LPAREN argsopt . RPAREN

    RPAREN          shift and go to state 24


state 20

    (36) argsopt -> args .

    RPAREN          reduce using rule 36 (argsopt -> args .)


state 21

    (37) argsopt -> empty .

    RPAREN          reduce using rule 37 (argsopt -> empty .)


state 22

    (38) args -> expression . SEPARATOR args
    (39) args -> expression .
    (2) expression -> expression . PLUS term
    (3) expression -> expression . MINUS term

    SEPARATOR       shift and go to state 25
    RPAREN          reduce using rule 39 (args -> expression .)
    PLUS            shift and go to state 7
    MINUS           shift and go to state 8


state 23

    (10) factor -> LPAREN expression RPAREN .

    LPAREN          reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    STAR            reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    SLASH           reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    PCT             reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    $end            reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 10 (factor -> LPAREN expression RPAREN .)
    SEPARATOR       reduce using rule 10 (factor -> LPAREN expression RPAREN .)


state 24

    (11) factor -> factor LPAREN argsopt RPAREN .

    LPAREN          reduce using rule 11 (factor -> factor LPAREN argsopt RPAREN .)
    STAR            reduce using rule 11 (factor -> factor LPAREN argsopt RPAREN .)
    SLASH           reduce using rule 11 (factor -> factor LPAREN argsopt RPAREN .)
    PCT             reduce using rule 11 (factor -> factor LPAREN argsopt RPAREN .)
    PLUS            reduce using rule 11 (factor -> factor LPAREN argsopt RPAREN .)
    MINUS           reduce using rule 11 (factor -> factor LPAREN argsopt RPAREN .)
    $end            reduce using rule 11 (factor -> factor LPAREN argsopt RPAREN .)
    RPAREN          reduce using rule 11 (factor -> factor LPAREN argsopt RPAREN .)
    SEPARATOR       reduce using rule 11 (factor -> factor LPAREN argsopt RPAREN .)


state 25

    (38) args -> expression SEPARATOR . args
    (38) args -> . expression SEPARATOR args
    (39) args -> . expression
    (1) expression -> . term
    (2) expression -> . expression PLUS term
    (3) expression -> . expression MINUS term
    (4) term -> . factor
    (5) term -> . term STAR factor
    (6) term -> . term SLASH factor
    (7) term -> . term PCT factor
    (8) factor -> . ID
    (9) factor -> . NUM
    (10) factor -> . LPAREN expression RPAREN
    (11) factor -> . factor LPAREN argsopt RPAREN

    ID              shift and go to state 4
    NUM             shift and go to state 5
    LPAREN          shift and go to state 6

    expression                     shift and go to state 22
    args                           shift and go to state 26
    term                           shift and go to state 2
    factor                         shift and go to state 3

state 26

    (38) args -> expression SEPARATOR args .

    RPAREN          reduce using rule 38 (args -> expression SEPARATOR args .)

