
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftSTARSLASHPCTADD ASSIGN BLOCK DICT EXPORT FLOAT GE GT ID INT LE LIST LONG LPAREN LT MINE MINUS NE NUM PCT PLUS PRINT RPAREN RUN SEPARATOR SLASH STAR STR TUPLE TYPEASSIGN VIEWexpression : term\n                  | expression PLUS term\n                  | expression MINUS termterm : factor\n            | term STAR factor\n            | term SLASH factor\n            | term PCT factorfactor : ID\n              | NUM\n              | LPAREN expression RPAREN\n              | factor LPAREN argsopt RPARENtype : STR\n            | INT\n            | LONG\n            | FLOAT\n            | LIST\n            | TUPLE\n            | DICTattribute : ID TYPEASSIGN typeattributes : attribute\n                  | attributes SEPARATOR attributenew_att : ID TYPEASSIGN STR\n               | ID TYPEASSIGN NUMnew_atts : new_att\n                | new_atts SEPARATOR new_attblock : BLOCK IDtest : expression NE expression\n            | expression LT expression\n            | expression LE expression\n            | expression GE expression\n            | expression GT expressionargsopt : args\n               | emptyargs : expression SEPARATOR args\n            | expressionempty :'
    
_lr_action_items = {'ID':([0,6,7,8,9,10,11,12,25,],[4,4,4,4,4,4,4,4,4,]),'NUM':([0,6,7,8,9,10,11,12,25,],[5,5,5,5,5,5,5,5,5,]),'LPAREN':([0,3,4,5,6,7,8,9,10,11,12,16,17,18,23,24,25,],[6,12,-8,-9,6,6,6,6,6,6,6,12,12,12,-10,-11,6,]),'$end':([1,2,3,4,5,14,15,16,17,18,23,24,],[0,-1,-4,-8,-9,-2,-3,-5,-6,-7,-10,-11,]),'PLUS':([1,2,3,4,5,13,14,15,16,17,18,22,23,24,],[7,-1,-4,-8,-9,7,-2,-3,-5,-6,-7,7,-10,-11,]),'MINUS':([1,2,3,4,5,13,14,15,16,17,18,22,23,24,],[8,-1,-4,-8,-9,8,-2,-3,-5,-6,-7,8,-10,-11,]),'RPAREN':([2,3,4,5,12,13,14,15,16,17,18,19,20,21,22,23,24,26,],[-1,-4,-8,-9,-36,23,-2,-3,-5,-6,-7,24,-32,-33,-35,-10,-11,-34,]),'SEPARATOR':([2,3,4,5,14,15,16,17,18,22,23,24,],[-1,-4,-8,-9,-2,-3,-5,-6,-7,25,-10,-11,]),'STAR':([2,3,4,5,14,15,16,17,18,23,24,],[9,-4,-8,-9,9,9,-5,-6,-7,-10,-11,]),'SLASH':([2,3,4,5,14,15,16,17,18,23,24,],[10,-4,-8,-9,10,10,-5,-6,-7,-10,-11,]),'PCT':([2,3,4,5,14,15,16,17,18,23,24,],[11,-4,-8,-9,11,11,-5,-6,-7,-10,-11,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'expression':([0,6,12,25,],[1,13,22,22,]),'term':([0,6,7,8,12,25,],[2,2,14,15,2,2,]),'factor':([0,6,7,8,9,10,11,12,25,],[3,3,3,3,16,17,18,3,3,]),'argsopt':([12,],[19,]),'args':([12,25,],[20,26,]),'empty':([12,],[21,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> expression","S'",1,None,None,None),
  ('expression -> term','expression',1,'p_expr','Final_PL_HW.py',135),
  ('expression -> expression PLUS term','expression',3,'p_expr','Final_PL_HW.py',136),
  ('expression -> expression MINUS term','expression',3,'p_expr','Final_PL_HW.py',137),
  ('term -> factor','term',1,'p_term','Final_PL_HW.py',159),
  ('term -> term STAR factor','term',3,'p_term','Final_PL_HW.py',160),
  ('term -> term SLASH factor','term',3,'p_term','Final_PL_HW.py',161),
  ('term -> term PCT factor','term',3,'p_term','Final_PL_HW.py',162),
  ('factor -> ID','factor',1,'p_factor','Final_PL_HW.py',185),
  ('factor -> NUM','factor',1,'p_factor','Final_PL_HW.py',186),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor','Final_PL_HW.py',187),
  ('factor -> factor LPAREN argsopt RPAREN','factor',4,'p_factor','Final_PL_HW.py',188),
  ('type -> STR','type',1,'p_type','Final_PL_HW.py',201),
  ('type -> INT','type',1,'p_type','Final_PL_HW.py',202),
  ('type -> LONG','type',1,'p_type','Final_PL_HW.py',203),
  ('type -> FLOAT','type',1,'p_type','Final_PL_HW.py',204),
  ('type -> LIST','type',1,'p_type','Final_PL_HW.py',205),
  ('type -> TUPLE','type',1,'p_type','Final_PL_HW.py',206),
  ('type -> DICT','type',1,'p_type','Final_PL_HW.py',207),
  ('attribute -> ID TYPEASSIGN type','attribute',3,'p_attribute','Final_PL_HW.py',211),
  ('attributes -> attribute','attributes',1,'p_attributes','Final_PL_HW.py',215),
  ('attributes -> attributes SEPARATOR attribute','attributes',3,'p_attributes','Final_PL_HW.py',216),
  ('new_att -> ID TYPEASSIGN STR','new_att',3,'p_new_att','Final_PL_HW.py',229),
  ('new_att -> ID TYPEASSIGN NUM','new_att',3,'p_new_att','Final_PL_HW.py',230),
  ('new_atts -> new_att','new_atts',1,'p_new_atts','Final_PL_HW.py',236),
  ('new_atts -> new_atts SEPARATOR new_att','new_atts',3,'p_new_atts','Final_PL_HW.py',237),
  ('block -> BLOCK ID','block',2,'p_block','Final_PL_HW.py',251),
  ('test -> expression NE expression','test',3,'p_test','Final_PL_HW.py',296),
  ('test -> expression LT expression','test',3,'p_test','Final_PL_HW.py',297),
  ('test -> expression LE expression','test',3,'p_test','Final_PL_HW.py',298),
  ('test -> expression GE expression','test',3,'p_test','Final_PL_HW.py',299),
  ('test -> expression GT expression','test',3,'p_test','Final_PL_HW.py',300),
  ('argsopt -> args','argsopt',1,'p_argsopt','Final_PL_HW.py',323),
  ('argsopt -> empty','argsopt',1,'p_argsopt','Final_PL_HW.py',324),
  ('args -> expression SEPARATOR args','args',3,'p_args','Final_PL_HW.py',328),
  ('args -> expression','args',1,'p_args','Final_PL_HW.py',329),
  ('empty -> <empty>','empty',0,'p_empty','Final_PL_HW.py',333),
]
